60.	Faça um programa que possua um vetor denominado A que armazene 6 números inteiros. O programa deve executar os seguintes passos:
(a)	Atribua os seguintes valores a esse vetor: 1, 0, 5, -2, -5, 7.
(b)	Armazene em uma variável inteira (simples) a soma entre os valores das posições
A[0], A[1] e A[5] do vetor e mostre na tela esta soma.
(c)	Modifique o vetor na posição 4, atribuindo a esta posição valor 100.
(d)	Mostre na tela cada valor do vetor A, um em cada linha.
61.	Crie um programa que lê 6 valores inteiros e, em seguida, mostre na tela os valores lidos.
62.	Ler um conjunto de números reais, armazenando-o em vetor e calcular o quadrado das componentes deste vetor, armazenando o resultado em outro vetor.  Os conjuntos têm 10 elementos cada. Imprimir todos os conjuntos.
63.	Faça um programa que leia um vetor de 8 posições e, em seguida, leia também dois valores X e Y  quaisquer correspondentes a duas posições no vetor. Ao final, seu programa deverá escrever a soma dos valores encontrados nas respectivas posições X  e Y .
64.	Leia um vetor de 10 posições. Contar e escrever quantos valores pares ele possui.

//65.	Faça um programa que receba do usuário um vetor com 10 posições. Em seguida, deverá ser impresso o maior e o menor elemento do vetor.

#include<stdio.h>

int main()
{
 int numero, maior, menor;
 int i;

 printf("Entre com o 1º número inteiro:\n ");
 scanf("%i", &numero);

 maior = numero;
 menor = numero;

 for(i=1; i<10; i++)
 {
 printf("\nEntre com o %dº numero inteiro: ",i+1);
 scanf("%i", &numero);

 if (numero > maior)
 maior = numero;
 else
 if (numero < menor)
 menor = numero;
 }

 printf("\nO menor numero entrado e: %d", menor);
 printf("\nO maior numero entrado e: %d", maior);

 return 0;
}


66.	Escreva um programa que leia 10 números inteiros e os armazene em um vetor. Imprima o vetor, o maior elemento e a posição que ele se encontra.
67.	Crie um programa que lê 6 valores inteiros e, em seguida, mostre na tela os valores lidos na ordem inversa.
68.	Crie um programa que lê 6 valores inteiros pares e, em seguida, mostre na tela os valores lidos na ordem inversa.

69.	Faça um programa para ler a nota da prova de 15 alunos e armazene num vetor, calcule e imprima a média geral.
#include <stdio.h>

int main(){

int notas[15], i,total=0, media;

printf("Informe as 15 notas: \n");
for(i=0;i<15;i++){

 scanf("%d", &notas[i]);
}
for(i=0;i<15;i++){
 total = total + notas[i];
}
media = (total/15);
printf("A media geral e: %d", media);

return 0;
}


70.	Faça um programa que preencha um vetor com 10 números reais, calcule e mostre a quantidade de números negativos e a soma dos números positivos desse vetor.

#include <stdio.h>

int main(){

int notas[10], i,total=0, media;

printf("Informe as 10 notas: \n");
for(i=0;i<10;i++){

 scanf("%d", &notas[i]);
}
for(i=0;i<10;i++){
 total = total + notas[i];
}
media = (total/10);
printf("A media geral e: %d", media);

return 0;
}


71.	Fazer um programa para ler 5 valores e, em seguida, mostrar todos os valores lidos juntamente com o maior, o menor e a média dos valores.
72.	Fazer um programa para ler 5 valores e, em seguida, mostrar a posição onde se encontram o maior e o menor valor.
73.	Faça um programa que leia um vetor de 10 posições e verifique se existem valores iguais e os escreva na tela.
74.	Leia um vetor com 20 números inteiros.  Escreva os elementos do vetor eliminando elementos repetidos.
75.	Faça um programa que leia um vetor de 5 posições para números reais e, depois, um código inteiro. Se o código for zero, finalize o programa; se for 1, mostre o vetor na ordem direta; se for 2, mostre o vetor na ordem inversa. Caso o código for diferente de 1 e 2 escreva uma mensagem informando que o código é invalido.
76.	Leia um vetor de 10 posições e atribua valor 0 para todos os elementos que possuírem valores negativos.
77.	Faça  um  programa  que  leia  um  vetor  de  10  números.   Leia  um  número  x.   Conte  os múltiplos de um número inteiro x num vetor e mostre-os na tela.
78.	Faça um vetor de tamanho 50 preenchido com o seguinte valor: (i + 5  *  i)%(i + 1), sendo
i, a posição do elemento no vetor. Em seguida imprima o vetor na tela.
79.	Escreva um programa que leia números inteiros no intervalo [0,50] e os armazene em um vetor com 10 posições.  Preencha um segundo vetor apenas com os números ímpares do primeiro vetor. Imprima os dois vetores, 2 elementos por linha.
80.	Faça um programa que receba do usuário dois vetores, A e B, com 10 números inteiros cada. Crie um novo vetor denominado C calculando C = A - B. Mostre na tela os dados do vetor C.
81.	Faça um programa que leia dois vetores de 10 posições e calcule outro vetor contendo, nas posições pares os valores do primeiro e nas posições ímpares os valores do segundo.
82.	Ler dois conjuntos de números reais, armazená-los em vetores e calcular o produto escalar entre eles.  Os conjuntos têm 5 elementos cada.  Imprimir os dois conjuntos e o produto escalar, sendo que o produto escalar é dado por: x1 ∗ y1 + x2 ∗ y2 + ... + xn ∗ yn.
83.	Faça um programa que leia dez conjuntos de dois valores, o primeiro representando o número do aluno e o segundo representando a sua altura em metros.  Encontre o aluno mais baixo e o mais alto. Mostre o número do aluno mais baixo e do mais alto, juntamente com suas alturas.
84.	Faça um programa que preencha um vetor de tamanho 100 com os 100 primeiros naturais que não são múltiplos de 7 ou que terminam com 7.
85.	Faça um programa que calcule o desvio padrão de um vetor v, contendo n = 10 números, onde m é a média do vetor.


86.	Leia 10 números inteiros e armazene em um vetor.  Em seguida escreva os elementos que são primos e suas respectivas posições no vetor.
87.	Leia 10 números inteiros e armazene em um vetor v.  Crie dois novos vetores v1  e v2. Copie os valores ímpares de v para v1, e os valores pares de v para v2. Note que cada um dos vetores v1 e v2 teˆm no máximo 10 elementos, mas nem todos os elementos são utilizados. No final escreva os elementos UTILIZADOS de v1 e v2. 
88.	Faça um programa que receba 6 números inteiros e mostre:
•	Os números pares digitados;
•	A soma dos números pares digitados;
•	Os números ímpares digitados;
•	A quantidade de números ímpares digitados;


89.	Faça  um  programa  que  leia  dois  vetores  de  10  elementos.   Crie  um  vetor  que  seja  a intersecção entre os 2 vetores anteriores, ou seja, que contém apenas os números que estão em ambos os vetores. Não deve conter números repetidos.

#include <stdio.h>

int main(void) {
int i, j, k;
int end[10] = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10};
int num[10] = {10, 30, 12, 3, 9, 17, 25, 63, 92, 100};
int novo[10];
  
printf("Imprima a intersecção entre os vetores:\n\n");

k = 0;
for (i = 0 ; i < 10 ; i++)
{
  for (j = 0 ; j < 10 ; j++)
  {
    if (end[i] == num[j]){
      novo[k] = end[i];
      k = k + 1;
    }
  }
}
for (int p = 0 ; p < k ; p++)
{
printf("novo[%d] = %d\n",k,novo[p]);
}
{
printf("Fim!");
}
return 0;
}


90.	Faça um programa que leia dois vetores de 10 elementos. Crie um vetor que seja a união entre os 2 vetores anteriores, ou seja, que contém os números dos dois vetores.  Não deve conter nu´meros repetidos.
91.	Leia dois vetores de inteiros x e y, cada um com 5 elementos (assuma que o usuário não informa elementos repetidos). Calcule e mostre os vetores resultantes em cada caso abaixo:
●	Soma entre x e y: soma de cada elemento de x com o elemento da mesma posição em y.
●	Produto entre x e y: multiplicação de cada elemento de x com o elemento da mesma posição em y.
●	Diferença entre x e y: todos os elementos de x que não existam em y.
●	Interseção entre x e y: apenas os elementos que aparecem nos dois vetores.
●	União entre x  e y:  todos os elementos de x, e todos os elementos de y  que não estão em x.
92.	Faça um programa que leia um vetor de 15 posições e o compacte, ou seja, elimine as posições com valor zero. Para isso, todos os elementos à frente do valor zero, devem ser movidos uma posição para trás no vetor.
93.	Faça um programa para ler 10 nu´meros DIFERENTES a serem armazenados em um vetor.  Os dados deverão ser armazenados no vetor na ordem que forem sendo lidos, sendo que caso o usuário digite um nu´mero que já foi digitado anteriormente, o programa deverá  pedir para ele digitar outro nu´mero.  Note que cada valor digitado pelo usuário deve ser pesquisado no vetor, verificando se ele existe entre os números que já foram fornecidos. Exibir na tela o vetor final que foi digitado.
94.	Faça um programa que leia dois números a e b (positivos menores que 10000) e: 
●	Crie um vetor onde cada posição é  um algarismo do número.  A primeira posição é o algarismo menos significativo;
●	Crie  um  vetor  que  seja  a  soma  de  a  e  b,  mas  faça-o  usando  apenas  os  vetores construídos anteriormente.
Dica:  some as posições correspondentes. Se a soma ultrapassar 10, subtraia 10 do resultado e some 1 a próxima posição.
95.	Leia um vetor com 10 números reais, ordene os elementos deste vetor, e no final escreva os elementos do vetor ordenado.
96.	Considere um vetor A com 11 elementos onde A1 < A2 <  …   < A6 > A7 > A8 > … > A11, ou seja, está ordenado em ordem crescente até o sexto elemento, e a partir desse elemento está ordenado em ordem decrescente. Dado o vetor da questão anterior, proponha um algoritmo para ordenar os elementos.
97.	Peça ao usuário para digitar dez valores numéricos e ordene por ordem crescente esses valores, guardando-os num vetor. Ordene o valor assim que ele for digitado. Mostre ao final na tela os valores em ordem.
98.	Escreva um programa que leia um número inteiro positivo n  e em seguida imprima n
linhas do chamado Triângulo de Pascal:

1
1 1
1 2  1
1 3  3  1
1 4  6  4  1
1 5  10  10  5  1
...
